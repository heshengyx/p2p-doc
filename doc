以下为详细的导入导出实例：

　　一、数据导出：

 

　　1、 将数据库TEST完全导出，用户名system 密码manager 导出到D：\daochu.dmp中

 

　　exp system/manager@TEST file=d：\daochu.dmp full=y

 

　　2、 将数据库中system用户与sys用户的表导出

 

　　exp system/manager@TEST file=d：\daochu.dmp owner=（system，sys）

 

　　3、 将数据库中的表table1 、table2导出

 

　　exp system/manager@TEST file=d：\daochu.dmp tables=（table1，table2）

 

　　4、 将数据库中的表table1中的字段filed1以"00"打头的数据导出

　　exp system/manager@TEST file=d：\daochu.dmp tables=（table1） query=\" where filed1 like '00%'\"

　　上面是常用的导出，对于压缩我不太在意，用winzip把dmp文件可以很好的压缩。

　　不过在上面命令后面 加上 compress=y  就可以了

　　二、数据的导入

 　 1、将D：\daochu.dmp 中的数据导入 TEST数据库中。

　　imp system/manager@TEST  file=d：\daochu.dmp

　　上面可能有点问题，因为有的表已经存在，然后它就报错，对该表就不进行导入。

　　在后面加上 ignore=y 就可以了。

　　2 将d：\daochu.dmp中的表table1 导入

　　imp system/manager@TEST  file=d：\daochu.dmp  tables=（table1）

　　基本上上面的导入导出够用了。不少情况我是将表彻底删除，然后导入。
  
 
 插入数据
 insert into table1 select * from table2
 create table table1 as select * from table2


/usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /export/secondary -u http://10.1.53.72:8080/cloudstack/systemvm/systemvm64template-4.6.0-xen.vhd.bz2 -h xenserver -F

stream {
	  upstream backend {
	    hash $remote_addr consistent;
	    server 127.0.0.1:4701;
	    server 127.0.0.1:4702;
	  }
	  server {
	    listen 4700;
	    proxy_connect_timeout 1s;
	    proxy_timeout 3s;
	    proxy_pass backend;
	  }
	}

log4j.rootLogger=INFO, stdout, errinfoLog

log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n
 
log4j.appender.errinfoLog = org.apache.log4j.DailyRollingFileAppender 
#log4j.appender.errinfoLog.File=/home/webapps/errinfoLog.log
log4j.appender.errinfoLog.File = ${webapp.root}/WEB-INF/logs/grgbanking.log
log4j.appender.errinfoLog.DatePattern = '.'yyyy-MM-dd
#log4j.appender.errinfoLog.MaxFileSize=50000KB
#log4j.appender.errinfoLog.MaxBackupIndex=10
log4j.appender.errinfoLog.layout = org.apache.log4j.PatternLayout
log4j.appender.errinfoLog.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n
log4j.appender.errinfoLog.encoding = UTF-8
